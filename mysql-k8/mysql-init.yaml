---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      # initContainers:
      # - name: download-sql-dump
      #   image: mysql
      #   command: ["mysql -u root -p $MYSQL_ROOT_PASSWORD CREATE DATABASE SF"]
      #   env:
      #   - name: MYSQL_ROOT_PASSWORD
      #     valueFrom:
      #       secretKeyRef:
      #         name: flask-secret
      #         key: db_root_password        
      containers:
      - name: mysql
        image: mysql
        # imagePullPolicy: Never
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: flask-secret
              key: db_root_password
        - name: MYSQL_DATABASE
          value: SF            
        ports:
        - containerPort: 3306
          name: db-container       
        volumeMounts:
          - name: mysql-persistent-storage
            mountPath: /var/lib/mysql
          - name: usermanagement-dbcreation-script
            mountPath: /docker-entrypoint-initdb.d    
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
        - name: usermanagement-dbcreation-script
          configMap:
            name: usermanagement-dbcreation-script            
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: db
spec:
  ports:
  - port: 3306
    protocol: TCP
    name: mysql
  selector:
    app: db
  type: LoadBalancer